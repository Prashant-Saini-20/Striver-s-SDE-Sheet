class Solution {
public:
    int count;
    void merge(vector<int>& nums,int s,int mid,int e){
        int l=s,r=mid+1;
        while(l<=mid && r<=e){
            if(nums[l] <= (long)2*nums[r])
                l++;
            else{
                count=count+mid-l+1;
                r++;
            }
        }
        sort(nums.begin()+s,nums.begin()+e+1);
    }
    
    void mergeSort(vector<int>& nums,int s,int e){
        if(s>=e) return;
        int mid=(s+e)/2;
        mergeSort(nums,s,mid);
        mergeSort(nums,mid+1,e);
        merge(nums,s,mid,e);
    }

    int reversePairs(vector<int>& nums) {
        count=0;
        mergeSort(nums,0,nums.size()-1);
        return count;
    }
};
