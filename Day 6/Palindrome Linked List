class Solution {
public:
    
    ListNode* reverse(ListNode* head){
        if(head==NULL || head->next==NULL) return head;
        ListNode* sec_head=reverse(head->next);
        ListNode* temp=head->next;
        temp->next=head;
        head->next=NULL;
        return sec_head;
    }
    
    bool isPalindrome(ListNode* head) {
        if(head->next==NULL) return true;
        
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast && fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* rll=reverse(slow);
        ListNode* temp=head;
        while(rll && temp){
            if(rll->val != temp->val) return false;
            rll=rll->next;
            temp=temp->next;
        }
        return true;
    }
};
